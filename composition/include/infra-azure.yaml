inputs:
  azure_config:
    description: >
      Parameters for connecting to Azure.
    type: cloudify.datatypes.azure.Config
    default:
      subscription_id: { get_secret: default_azure_subscription_id }
      tenant_id: { get_secret: default_azure_tenant_id }
      client_id: { get_secret: default_azure_client_id }
      client_secret: { get_secret: default_azure_client_secret }

  azure_location:
    description: >
      Azure Location code for creating resources.
    default: { get_secret: default_azure_location }

  cfy_resource_group_name:
    description: >
      Name of resource group where the Cloudify Manager virtual network
      is located.
    type: string
    default: { get_secret: default_azure_cfy_resource_group_name }

  cfy_vnet_name:
    description: >
      Name of virtual network to create our subnet in.
      This virtual network is expected to exist already - for this demo,
      Cloudify Manager and the new VM share the same virtual network.
    type: string
    default: { get_secret: default_azure_cfy_vnet_name }

  cfy_subnet_name:
    description: >
      Name of subnet to which Cloudify Manager is connected. The new VM
      will have a leg in this subnet.
    type: string
    default: { get_secret: default_azure_cfy_subnet_name }

  resource_group_name:
    description: >
      Name of resource group to use.
    type: string

  resource_name_prefix:
    description: >
      Prefix to prepend to created resources' names.
    type: string

  image:
    description: >
      Image to use.
    default:
      publisher: OpenLogic
      offer: CentOS
      sku: 7.6
      version: latest

  size:
    description: >
      Name of Virtual Machine Size in Azure.
    type: string
    default: Standard_B1s

  public_key_data:
    description: >
      Public SSH key to inject into the `authorized_keys` file.
    type: string
    default: { get_secret: default_azure_public_key_data }

node_templates:
  resource_group:
    type: cloudify.azure.nodes.ResourceGroup
    properties:
      azure_config: { get_input: azure_config }
      name: { get_input: resource_group_name }
      location: { get_input: azure_location }

  storage_account:
    type: cloudify.azure.nodes.storage.StorageAccount
    properties:
      azure_config: { get_input: azure_config }
      name: { concat: [ { get_input: resource_name_prefix }, 'sg' ] }
      location: { get_input: azure_location }
      resource_config:
        accountType: Standard_LRS
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group

  nic:
    type: cloudify.azure.nodes.network.NetworkInterfaceCard
    properties:
      azure_config: { get_input: azure_config }
      name: { concat: [ { get_input: resource_name_prefix }, 'nic' ] }
      location: { get_input: azure_location }
      primary: true
    relationships:
    - type: cloudify.azure.relationships.contained_in_resource_group
      target: resource_group
    - type: cloudify.azure.relationships.nic_connected_to_network_security_group
      target: network_security_group
    - type: cloudify.azure.relationships.nic_connected_to_ip_configuration
      target: public_ip_cfg

  public_ip_cfg:
    type: cloudify.azure.nodes.network.IPConfiguration
    properties:
      azure_config: { get_input: azure_config }
      name: { concat: [ { get_input: resource_name_prefix }, 'ipcfg' ] }
      location: { get_input: azure_location }
      resource_config:
        privateIPAllocationMethod: Dynamic
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.azure.relationships.ip_configuration_connected_to_subnet
        target: subnet
      - type: cloudify.azure.relationships.ip_configuration_connected_to_public_ip
        target: public_ip

  network_security_group:
    type: cloudify.azure.nodes.network.NetworkSecurityGroup
    properties:
      azure_config: { get_input: azure_config }
      name: { concat: [ { get_input: resource_name_prefix }, 'sgrp' ] }
      location: { get_input: azure_location }
      resource_config:
        securityRules:
          - name: sg_http_8080
            properties:
              description: HTTP access
              protocol: Tcp
              sourcePortRange: '*'
              destinationPortRange: 8080
              sourceAddressPrefix: '*'
              destinationAddressPrefix: '*'
              priority: 103
              access: Allow
              direction: Inbound
          - name: sg_ssh
            properties:
              description: SSH access
              protocol: Tcp
              sourcePortRange: '*'
              destinationPortRange: 22
              sourceAddressPrefix: '*'
              destinationAddressPrefix: '*'
              priority: 102
              access: Allow
              direction: Inbound
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group

  virtual_network:
    type: cloudify.azure.nodes.network.VirtualNetwork
    properties:
      azure_config: { get_input: azure_config }
      name: { get_input: cfy_vnet_name }
      location: { get_input: azure_location }
      resource_group_name: { get_input: cfy_resource_group_name }
      use_external_resource: true

  subnet:
    type: cloudify.azure.nodes.network.Subnet
    properties:
      azure_config: { get_input: azure_config }
      name: { get_input: cfy_subnet_name }
      location: { get_input: azure_location }
      resource_group_name: { get_input: cfy_resource_group_name }
      use_external_resource: true
    relationships:
      - type: cloudify.azure.relationships.contained_in_virtual_network
        target: virtual_network

  public_ip:
    type: cloudify.azure.nodes.network.PublicIPAddress
    properties:
      azure_config: { get_input: azure_config }
      name: { concat: [ { get_input: resource_name_prefix }, 'ip' ] }
      location: { get_input: azure_location }
      resource_config:
        publicIPAllocationMethod: Static
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group

  vm:
    type: cloudify.azure.nodes.compute.VirtualMachine
    properties:
      azure_config: { get_input: azure_config }
      location: { get_input: azure_location }
      os_family: linux
      name: { concat: [ { get_input: resource_name_prefix }, 'vm' ] }
      resource_config:
        hardwareProfile:
          vmSize: { get_input: size }
        storageProfile:
          imageReference: { get_input: image }
        osProfile:
          computerName: { get_property: [SELF, name] }
          adminUsername: centos
          linuxConfiguration:
            ssh:
              publicKeys:
                - path: /home/centos/.ssh/authorized_keys
                  keyData: { get_input: public_key_data }
            disablePasswordAuthentication: True
      agent_config:
        user: { get_input: agent_user }
        key: { get_input: private_key_path }
        port: 22
    relationships:
      - type: cloudify.azure.relationships.contained_in_resource_group
        target: resource_group
      - type: cloudify.azure.relationships.connected_to_storage_account
        target: storage_account
      - type: cloudify.azure.relationships.connected_to_nic
        target: nic
