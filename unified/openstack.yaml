tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://cloudify.co/spec/cloudify/4.6/types.yaml
  - include/infra.yaml
  - include/app.yaml
  - plugin:cloudify-openstack-plugin

inputs:

  openstack_config:
    type: cloudify.openstack.types.configuration
    default:
      username: { get_secret: openstack_username }
      password: { get_secret: openstack_password }
      tenant_name: { get_secret: openstack_tenant_name }
      auth_url: { get_secret: openstack_auth_url }
      region: { get_secret: openstack_region }

  external_network_name:
    type: string
    default: { get_secret: external_network_name }

  image_id:
    type: string
    default: { get_secret: default_centos_image_id }

  flavor_id:
    type: string
    default: { get_secret: default_linux_flavour_id }

  keypair_name:
    type: string
    default: { get_secret: default_keypair_name }

  network_name:
    type: string
    default: { get_secret: default_management_network_name }

  agent_security_group_name:
    type: string
    default: { get_secret: default_agents_security_group }

  app_security_group_name:
    type: string
    default: 'app-security-group'

node_templates:
  app_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      openstack_config: { get_input: openstack_config }
      resource_id: { get_input: app_security_group_name }
      rules:
        - direction: ingress
          protocol: tcp
          port_range_min: 1
          port_range_max: 65535
        - direction: ingress
          protocol: udp
          port_range_min: 1
          port_range_max: 65535
        - direction: ingress
          protocol: icmp
          port_range_min: null
          port_range_max: null

  agent_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      openstack_config: { get_input: openstack_config }
      resource_id: { get_input: agent_security_group_name }
      use_external_resource: true

  floating_ip:
    type: cloudify.openstack.nodes.FloatingIP
    properties:
      openstack_config: { get_input: openstack_config }
      floatingip:
        floating_network_name: { get_input: external_network_name }

  network:
    type: cloudify.openstack.nodes.Network
    properties:
      openstack_config: { get_input: openstack_config }
      resource_id: { get_input: network_name }
      use_external_resource: true

  vm:
    type: cloudify.openstack.nodes.Server
    properties:
      openstack_config: { get_input: openstack_config }
      agent_config:
        user: { get_input: agent_user }
        key: { get_input: private_key_path }
      image: { get_input: image_id }
      flavor: { get_input: flavor_id }
      server:
        key_name: { get_input: keypair_name }
    relationships:
      - type: cloudify.openstack.server_connected_to_floating_ip
        target: floating_ip
      - type: cloudify.openstack.server_connected_to_security_group
        target: agent_security_group
      - type: cloudify.openstack.server_connected_to_security_group
        target: app_security_group
      - type: cloudify.relationships.connected_to
        target: network


capabilities:
  private_ip:
    value: { get_attribute: [vm, ip] }
  public_ip:
    value: { get_attribute: [floating_ip, floating_ip_address] }
